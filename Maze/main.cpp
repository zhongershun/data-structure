#include <iostream>
#include"Maze.h"
#include"Maze.cpp"
using namespace std;




int main()
{

    Maze maze;
    int amatrix[5][5]={
        {0,1,1,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0},
        {0,1,0,1,0},
        {0,0,1,0,0}
    };
    maze.InitMaze(*amatrix,5);
    cout<<"************Show the Maze******************"<<endl;
    maze.PrintMaze();
    cout<<"**************find the path****************"<<endl;
    maze.PrintPathDFS();
   // (5,5)->(4,5)->(3,5)->(3,4)->(3,3)->(3,2)->(3,1)->(2,1)->(1,1)
   // (5,5)->(4,5)->(3,5)->(2,5)->(2,4)->(3,4)->(3,3)->(3,2)->(3,1)->(2,1)->(1,1)
   // (5,5)->(4,5)->(3,5)->(2,5)->(1,5)->(1,4)->(2,4)->(3,4)->(3,3)->(3,2)->(3,1)->(2,1)->(1,1)
   // (5,5)->(4,5)->(3,5)->(3,4)->(3,3)->(3,2)->(2,2)->(2,1)->(1,1)
   // (5,5)->(4,5)->(3,5)->(2,5)->(2,4)->(3,4)->(3,3)->(3,2)->(2,2)->(2,1)->(1,1)
   // (5,5)->(4,5)->(3,5)->(2,5)->(1,5)->(1,4)->(2,4)->(3,4)->(3,3)->(3,2)->(2,2)->(2,1)->(1,1)

    // maze.PrintPathStack();
    // 5 1 1 0 0 
    // 5 0 1 0 0 
    // 5 5 5 5 5 
    // 9 1 9 1 5 
    // 9 9 1 0 5 
    // 5,5)->(4,5)->(3,5)->(3,4)->(3,3)->(3,2)->(3,1)->(2,1)->(1,1)

    // maze.PrintPathBFS();
    // (5,5)->(4,5)->(3,5)->(3,4)->(3,3)->(3,2)
    return 0;
}




